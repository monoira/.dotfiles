{
  "snip_vite_react.gitignore": {
    "prefix": "snip_vite_react.gitignore",
    "body": [
      "node_modules/",
      "",
      "# Build output",
      "dist/",
      "",
      "# Local environment variables",
      ".env.local",
      "",
      "# Log files",
      "*.log",
      "",
      "# Vite cache",
      ".vite/",
      "",
      "# Editor directories and files",
      ".vscode/",
      ".idea/",
      "*.suo",
      "*.ntvs*",
      "*.njsproj",
      "*.sln"
    ],
    "description": "snip_vite_react.gitignore"
  },
  "snip_nextjs.gitignore": {
    "prefix": "snip_nextjs.gitignore",
    "body": [
      "### NextJS ###",
      "# dependencies",
      "/node_modules",
      "/.pnp",
      ".pnp.js",
      "",
      "# testing",
      "/coverage",
      "",
      "# next.js",
      "/.next/",
      "/out/",
      "",
      "# production",
      "/build",
      "",
      "# misc",
      ".DS_Store",
      "*.pem",
      "",
      "# debug",
      "npm-debug.log*",
      "yarn-debug.log*",
      "yarn-error.log*",
      ".pnpm-debug.log*",
      "",
      "# local env files",
      ".env*.local",
      "",
      "# vercel",
      ".vercel",
      "",
      "# typescript",
      "*.tsbuildinfo",
      "next-env.d.ts"
    ],
    "description": "snip_nextjs.gitignore"
  },
  "snip_nodejs.gitignore": {
    "prefix": "snip_nodejs.gitignore",
    "body": [
      "# dotenv environment variable files",
      ".env",
      ".env.development.local",
      ".env.test.local",
      ".env.production.local",
      ".env.local",
      "",
      "# Dependency directories",
      "node_modules/",
      "jspm_packages/",
      "",
      "# Logs",
      "logs",
      "*.log",
      "npm-debug.log*",
      "yarn-debug.log*",
      "yarn-error.log*",
      "lerna-debug.log*",
      ".pnpm-debug.log*",
      "",
      "# Diagnostic reports (https://nodejs.org/api/report.html)",
      "report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json",
      "",
      "# Runtime data",
      "pids",
      "*.pid",
      "*.seed",
      "*.pid.lock",
      "",
      "# Directory for instrumented libs generated by jscoverage/JSCover",
      "lib-cov",
      "",
      "# Coverage directory used by tools like istanbul",
      "coverage",
      "*.lcov",
      "",
      "# nyc test coverage",
      ".nyc_output",
      "",
      "# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)",
      ".grunt",
      "",
      "# Bower dependency directory (https://bower.io/)",
      "bower_components",
      "",
      "# node-waf configuration",
      ".lock-wscript",
      "",
      "# Compiled binary addons (https://nodejs.org/api/addons.html)",
      "build/Release",
      "",
      "# Snowpack dependency directory (https://snowpack.dev/)",
      "web_modules/",
      "",
      "# TypeScript cache",
      "*.tsbuildinfo",
      "",
      "# Optional npm cache directory",
      ".npm",
      "",
      "# Optional eslint cache",
      ".eslintcache",
      "",
      "# Optional stylelint cache",
      ".stylelintcache",
      "",
      "# Microbundle cache",
      ".rpt2_cache/",
      ".rts2_cache_cjs/",
      ".rts2_cache_es/",
      ".rts2_cache_umd/",
      "",
      "# Optional REPL history",
      ".node_repl_history",
      "",
      "# Output of 'npm pack'",
      "*.tgz",
      "",
      "# Yarn Integrity file",
      ".yarn-integrity",
      "",
      "# parcel-bundler cache (https://parceljs.org/)",
      ".cache",
      ".parcel-cache",
      "",
      "# Next.js build output",
      ".next",
      "out",
      "",
      "# Nuxt.js build / generate output",
      ".nuxt",
      "dist",
      "",
      "# Gatsby files",
      ".cache/",
      "# Comment in the public line in if your project uses Gatsby and not Next.js",
      "# https://nextjs.org/blog/next-9-1#public-directory-support",
      "# public",
      "",
      "# vuepress build output",
      ".vuepress/dist",
      "",
      "# vuepress v2.x temp and cache directory",
      ".temp",
      ".cache",
      "",
      "# Docusaurus cache and generated files",
      ".docusaurus",
      "",
      "# Serverless directories",
      ".serverless/",
      "",
      "# FuseBox cache",
      ".fusebox/",
      "",
      "# DynamoDB Local files",
      ".dynamodb/",
      "",
      "# TernJS port file",
      ".tern-port",
      "",
      "# Stores VSCode versions used for testing VSCode extensions",
      ".vscode-test",
      "",
      "# yarn v2",
      ".yarn/cache",
      ".yarn/unplugged",
      ".yarn/build-state.yml",
      ".yarn/install-state.gz",
      ".pnp.*"
    ],
    "description": "snip_nodejs.gitignore"
  },
  "snip_react_native.gitignore": {
    "prefix": "snip_react_native.gitignore",
    "body": [
      "### ReactNative ###",
      "# React Native Stack Base",
      "",
      ".expo",
      "__generated__",
      "",
      "### ReactNative.Node Stack ###",
      "# Logs",
      "logs",
      "*.log",
      "npm-debug.log*",
      "yarn-debug.log*",
      "yarn-error.log*",
      "lerna-debug.log*",
      ".pnpm-debug.log*",
      "",
      "# Diagnostic reports (https://nodejs.org/api/report.html)",
      "report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json",
      "",
      "# Runtime data",
      "pids",
      "*.pid",
      "*.seed",
      "*.pid.lock",
      "",
      "# Directory for instrumented libs generated by jscoverage/JSCover",
      "lib-cov",
      "",
      "# Coverage directory used by tools like istanbul",
      "coverage",
      "*.lcov",
      "",
      "# nyc test coverage",
      ".nyc_output",
      "",
      "# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)",
      ".grunt",
      "",
      "# Bower dependency directory (https://bower.io/)",
      "bower_components",
      "",
      "# node-waf configuration",
      ".lock-wscript",
      "",
      "# Compiled binary addons (https://nodejs.org/api/addons.html)",
      "build/Release",
      "",
      "# Dependency directories",
      "node_modules/",
      "jspm_packages/",
      "",
      "# Snowpack dependency directory (https://snowpack.dev/)",
      "web_modules/",
      "",
      "# TypeScript cache",
      "*.tsbuildinfo",
      "",
      "# Optional npm cache directory",
      ".npm",
      "",
      "# Optional eslint cache",
      ".eslintcache",
      "",
      "# Optional stylelint cache",
      ".stylelintcache",
      "",
      "# Microbundle cache",
      ".rpt2_cache/",
      ".rts2_cache_cjs/",
      ".rts2_cache_es/",
      ".rts2_cache_umd/",
      "",
      "# Optional REPL history",
      ".node_repl_history",
      "",
      "# Output of 'npm pack'",
      "*.tgz",
      "",
      "# Yarn Integrity file",
      ".yarn-integrity",
      "",
      "# dotenv environment variable files",
      ".env",
      ".env.development.local",
      ".env.test.local",
      ".env.production.local",
      ".env.local",
      "",
      "# parcel-bundler cache (https://parceljs.org/)",
      ".cache",
      ".parcel-cache",
      "",
      "# Next.js build output",
      ".next",
      "out",
      "",
      "# Nuxt.js build / generate output",
      ".nuxt",
      "dist",
      "",
      "# Gatsby files",
      ".cache/",
      "# Comment in the public line in if your project uses Gatsby and not Next.js",
      "# https://nextjs.org/blog/next-9-1#public-directory-support",
      "# public",
      "",
      "# vuepress build output",
      ".vuepress/dist",
      "",
      "# vuepress v2.x temp and cache directory",
      ".temp",
      "",
      "# Docusaurus cache and generated files",
      ".docusaurus",
      "",
      "# Serverless directories",
      ".serverless/",
      "",
      "# FuseBox cache",
      ".fusebox/",
      "",
      "# DynamoDB Local files",
      ".dynamodb/",
      "",
      "# TernJS port file",
      ".tern-port",
      "",
      "# Stores VSCode versions used for testing VSCode extensions",
      ".vscode-test",
      "",
      "# yarn v2",
      ".yarn/cache",
      ".yarn/unplugged",
      ".yarn/build-state.yml",
      ".yarn/install-state.gz",
      ".pnp.*",
      "",
      "### ReactNative.macOS Stack ###",
      "# General",
      ".DS_Store",
      ".AppleDouble",
      ".LSOverride",
      "",
      "# Icon must end with two \\r",
      "Icon",
      "",
      "",
      "# Thumbnails",
      "._*",
      "",
      "# Files that might appear in the root of a volume",
      ".DocumentRevisions-V100",
      ".fseventsd",
      ".Spotlight-V100",
      ".TemporaryItems",
      ".Trashes",
      ".VolumeIcon.icns",
      ".com.apple.timemachine.donotpresent",
      "",
      "# Directories potentially created on remote AFP share",
      ".AppleDB",
      ".AppleDesktop",
      "Network Trash Folder",
      "Temporary Items",
      ".apdisk",
      "",
      "### ReactNative.Android Stack ###",
      "# Gradle files",
      ".gradle/",
      "build/",
      "",
      "# Local configuration file (sdk path, etc)",
      "local.properties",
      "",
      "# Log/OS Files",
      "",
      "# Android Studio generated files and folders",
      "captures/",
      ".externalNativeBuild/",
      ".cxx/",
      "*.apk",
      "output.json",
      "",
      "# IntelliJ",
      "*.iml",
      ".idea/",
      "misc.xml",
      "deploymentTargetDropDown.xml",
      "render.experimental.xml",
      "",
      "# Keystore files",
      "*.jks",
      "*.keystore",
      "",
      "# Google Services (e.g. APIs or Firebase)",
      "google-services.json",
      "",
      "# Android Profiling",
      "*.hprof",
      "",
      "### ReactNative.Xcode Stack ###",
      "## User settings",
      "xcuserdata/",
      "",
      "## Xcode 8 and earlier",
      "*.xcscmblueprint",
      "*.xccheckout",
      "",
      "### ReactNative.Buck Stack ###",
      "buck-out/",
      ".buckconfig.local",
      ".buckd/",
      ".buckversion",
      ".fakebuckversion",
      "",
      "### ReactNative.Gradle Stack ###",
      ".gradle",
      "**/build/",
      "!src/**/build/",
      "",
      "# Ignore Gradle GUI config",
      "gradle-app.setting",
      "",
      "# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)",
      "!gradle-wrapper.jar",
      "",
      "# Avoid ignore Gradle wrappper properties",
      "!gradle-wrapper.properties",
      "",
      "# Cache of project",
      ".gradletasknamecache",
      "",
      "# Eclipse Gradle plugin generated files",
      "# Eclipse Core",
      ".project",
      "# JDT-specific (Eclipse Java Development Tools)",
      ".classpath",
      "",
      "### ReactNative.Linux Stack ###",
      "*~",
      "",
      "# temporary files which can be created if a process still has a handle open of a deleted file",
      ".fuse_hidden*",
      "",
      "# KDE directory preferences",
      ".directory",
      "",
      "# Linux trash folder which might appear on any partition or disk",
      ".Trash-*",
      "",
      "# .nfs files are created when an open file is removed but is still being accessed",
      ".nfs*"
    ],
    "description": "snip_react_native.gitignore"
  },
  "snip_go.gitignore": {
    "prefix": "snip_go.gitignore",
    "body": [
      "# Binaries for programs and plugins",
      "*.exe",
      "*.exe~",
      "*.dll",
      "*.so",
      "*.dylib",
      "",
      "# Test binary, built with `go test -c`",
      "*.test",
      "",
      "# Output of the go coverage tool, specifically when used with LiteIDE",
      "*.out",
      "",
      "# Dependency directories (remove the comment below to include it)",
      "# vendor/",
      "",
      "# Go workspace file",
      "go.work",
      "go.work.sum",
      "",
      "# env file",
      ".env"
    ],
    "description": "snip_go.gitignore"
  },
  "snip_lua.gitignore": {
    "prefix": "snip_lua.gitignore",
    "body": [
      "# Compiled Lua sources",
      "luac.out",
      "",
      "# luarocks build files",
      "*.src.rock",
      "*.zip",
      "*.tar.gz",
      "",
      "# Object files",
      "*.o",
      "*.os",
      "*.ko",
      "*.obj",
      "*.elf",
      "",
      "# Precompiled Headers",
      "*.gch",
      "*.pch",
      "",
      "# Libraries",
      "*.lib",
      "*.a",
      "*.la",
      "*.lo",
      "*.def",
      "*.exp",
      "",
      "# Shared objects (inc. Windows DLLs)",
      "*.dll",
      "*.so",
      "*.so.*",
      "*.dylib",
      "",
      "# Executables",
      "*.exe",
      "*.out",
      "*.app",
      "*.i*86",
      "*.x86_64",
      "*.hex"
    ],
    "description": "snip_lua.gitignore"
  }
}
